// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhonebookApi.DTO;

namespace PhonebookApi.Migrations
{
    /// <summary>
    /// Generated by EFcore CLI for db creation
    /// </summary>
    [DbContext(typeof(PhonebookContext))]
    partial class PhonebookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("PhonebookApi.DTO.ContactDetail", b =>
                {
                    b.Property<int>("ContactDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("PhonebookEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContactDetailId");

                    b.HasIndex("PhonebookEntryId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("PhonebookApi.DTO.PhonebookEntry", b =>
                {
                    b.Property<int>("PhonebookEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("PhonebookEntryId");

                    b.ToTable("PhonebookEntries");
                });

            modelBuilder.Entity("PhonebookApi.DTO.ContactDetail", b =>
                {
                    b.HasOne("PhonebookApi.DTO.PhonebookEntry", "PhonebookEntry")
                        .WithMany("ContactDetails")
                        .HasForeignKey("PhonebookEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
